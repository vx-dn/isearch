name: Deploy Frontend

on:
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
      - '.github/workflows/deploy-frontend.yml'
  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-1

jobs:
  deploy:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Get Terraform outputs
      id: terraform
      run: |
        cd infrastructure/terraform
        echo "frontend-bucket=$(terraform output -raw frontend_bucket_name)" >> $GITHUB_OUTPUT
        echo "cloudfront-id=$(terraform output -raw cloudfront_distribution_id)" >> $GITHUB_OUTPUT
        echo "api-url=$(terraform output -raw api_url)" >> $GITHUB_OUTPUT

    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci

    - name: Build frontend
      env:
        VITE_API_URL: ${{ steps.terraform.outputs.api-url }}
        VITE_APP_NAME: "Receipt Search"
        VITE_APP_VERSION: ${{ github.sha }}
      run: |
        cd frontend
        npm run build

    - name: Deploy to S3
      run: |
        cd frontend
        aws s3 sync dist/ s3://${{ steps.terraform.outputs.frontend-bucket }} --delete

    - name: Invalidate CloudFront
      run: |
        aws cloudfront create-invalidation \
          --distribution-id ${{ steps.terraform.outputs.cloudfront-id }} \
          --paths "/*"

    - name: Deployment summary
      run: |
        echo "✅ Frontend deployed successfully!"
        echo "🌐 Frontend URL: https://$(aws cloudfront get-distribution --id ${{ steps.terraform.outputs.cloudfront-id }} --query 'Distribution.DomainName' --output text)"
        echo "📦 S3 Bucket: ${{ steps.terraform.outputs.frontend-bucket }}"
        echo "🚀 CloudFront Distribution: ${{ steps.terraform.outputs.cloudfront-id }}"